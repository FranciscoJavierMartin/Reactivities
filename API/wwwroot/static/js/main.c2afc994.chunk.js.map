{"version":3,"sources":["app/constants/routes.ts","app/models/activity.ts","app/models/pagination.ts","app/api/agent.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/CustomTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/homes/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/CustomTextArea.tsx","app/common/form/CustomSelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/CustomDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/NotFoundPage.tsx","features/errors/ServerErrorPage.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","app/layout/ScrollToTop.tsx","index.tsx"],"names":["ACTIVITIES_PAGE_ROUTE","ACTIVITIES_DETAILS_PAGE_ROUTE","CREATE_ACTIVITY_PAGE_ROUTE","NOT_FOUND_PAGE_ROUTE","SERVER_ERROR_PAGE_ROUTE","getActivityDetailsRoute","id","getProfileRoute","username","Activity","init","Object","assign","this","attendees","ActivityFormValues","activity","undefined","title","date","description","category","city","venue","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","res","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","url","params","get","then","body","post","put","delete","agent","Activities","list","details","create","update","attend","Account","current","login","user","register","Profiles","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","isLoading","isLoadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","activitiesFromServer","setActivity","setPagination","console","log","setIsLoadingInitial","loadActivity","getActivity","runInAction","state","createActivity","userStore","attendee","newActivity","hostUsername","updateActivity","updatedActivity","deleteActivity","updateAttendance","isGoing","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","some","isHost","host","find","x","Date","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","currentUserProfile","isLoadingProfile","isUploading","followings","isLoadingFollowings","activeTab","userActivities","isLoadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","localStorage","removeItem","getUser","name","getItem","appLoaded","setItem","setAppLoaded","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","loading","e","preventDefault","handleFollow","truncate","str","length","substring","ProfileCard","Card","Description","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","isLoadingNext","setIsLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","finally","hasMore","totalPages","initialLoad","Loader","CustomTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","validationSchema","Yup","required","handleSubmit","isSubmitting","isValid","dirty","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","isLoggedIn","LoadingComponent","Dimmer","CustomAreaInput","CustomSelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","CustomDateInput","selected","useHistory","useParams","enableReinitialize","uuid","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","NotFound","Inline","primary","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","prevState","ProfileEditForm","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","setCropper","imagePreview","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","widths","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","followingCount","Divider","PrivateRoute","Component","component","rest","location","useLocation","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerErrorPage","NotFoundPage","ScrollToTop","pathname","window","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.c2afc994.chunk.js","sourcesContent":["export const HOME_PAGE_ROUTE = '/';\nexport const ACTIVITIES_PAGE_ROUTE = '/activities';\nexport const ACTIVITIES_DETAILS_PAGE_ROUTE = `${ACTIVITIES_PAGE_ROUTE}/:id`;\nexport const CREATE_ACTIVITY_PAGE_ROUTE = '/createActivity';\nexport const MANAGE_ACTIVITY_PAGE_ROUTE = '/manage/:id';\nexport const PROFILE_PAGE_ROUTE = '/profiles/:username';\nexport const ERRORS_PAGE_ROUTE = '/errors';\nexport const NOT_FOUND_PAGE_ROUTE = '/not-found';\nexport const SERVER_ERROR_PAGE_ROUTE = '/server-error';\n\nexport const getActivityDetailsRoute = (id: string) =>\n  `${ACTIVITIES_PAGE_ROUTE}/${id}`;\nexport const getManageActivityRoute = (id: string) => `/manage/${id}`;\nexport const getProfileRoute = (username: string | undefined) => `/profiles/${username}`;\n","import { Profile } from './profile';\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this.attendees, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  date: Date | null = null;\n  description: string = '';\n  category: string = '';\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.description = activity.description;\n      this.category = activity.category;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}\n","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber = 1;\n  pageSize = 2;\n\n  constructor(pageNumber: number = 1, pageSize: number = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { history } from '../..';\nimport { FilteringPredicate } from '../common/options/filteringOptions';\nimport { FollowingPredicate } from '../common/options/followingTypes';\nimport {\n  NOT_FOUND_PAGE_ROUTE,\n  SERVER_ERROR_PAGE_ROUTE,\n} from '../constants/routes';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport { PaginatedResult } from '../models/pagination';\nimport { Photo, Profile, UserActivity } from '../models/profile';\nimport { User, UserFormValues } from '../models/user';\nimport { store } from '../stores/store';\n\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    let res = response;\n    const pagination = response.headers['pagination'];\n    if (pagination) {\n      response.data = new PaginatedResult(\n        response.data,\n        JSON.parse(pagination)\n      );\n      res = response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return res;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n      case 400:\n        if (typeof data === 'string') {\n          toast.error(data);\n        } else if (\n          config.method === 'get' &&\n          data.errors.hasOwnProperty('id')\n        ) {\n          history.push(NOT_FOUND_PAGE_ROUTE);\n        } else if (data.errors) {\n          const modalStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modalStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modalStateErrors.flat();\n        }\n        break;\n      case 401:\n        toast.error('Unauthorized');\n        break;\n      case 404:\n        history.push(NOT_FOUND_PAGE_ROUTE);\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(SERVER_ERROR_PAGE_ROUTE);\n        break;\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst request = {\n  get: <T>(url: string, params?: URLSearchParams) =>\n    axios\n      .get<T>(url, { params })\n      .then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    request.get<PaginatedResult<Activity[]>>('activities', params),\n  details: (id: string) => request.get<Activity>(`activities/${id}`),\n  create: (activity: ActivityFormValues) =>\n    request.post('activities', activity),\n  update: (activity: ActivityFormValues) =>\n    request.put(`activities/${activity.id}`, activity),\n  delete: (id: string) => request.del(`activities/${id}`),\n  attend: (id: string) => request.post<void>(`activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => request.get<User>('account'),\n  login: (user: UserFormValues) => request.post<User>('account/login', user),\n  register: (user: UserFormValues) =>\n    request.post<User>('account/register', user),\n};\n\nconst Profiles = {\n  get: (username: string) => request.get<Profile>(`profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append('File', file);\n    return axios.post<Photo>('photos', formData, {\n      headers: {\n        'Content-type': 'multipart/form-data',\n      },\n    });\n  },\n  setMainPhoto: (id: string) => request.post(`photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => request.del(`photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) =>\n    request.put('profiles', profile),\n  updateFollowing: (username: string) => request.post(`follow/${username}`, {}),\n  listFollowings: (username: string, predicate: FollowingPredicate) =>\n    request.get<Profile[]>(`follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: FilteringPredicate) =>\n    request.get<UserActivity[]>(\n      `profiles/${username}/activities?predicate=${predicate}`\n    ),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { User } from './user';\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  following: boolean;\n  followersCount: number;\n  followingCount: number;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport interface FileWithPreview extends File {\n  preview: string;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport agent from '../api/agent';\nimport { format } from 'date-fns';\nimport { store } from './store';\nimport { Profile } from '../models/profile';\nimport { Pagination, PagingParams } from '../models/pagination';\nimport {\n  FilteringPredicate,\n  FilteringValue,\n} from '../common/options/filteringOptions';\n\nexport default class ActivityStore {\n  activityRegistry: Map<string, Activity> = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode: boolean = false;\n  isLoading: boolean = false;\n  isLoadingInitial: boolean = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map<FilteringPredicate, FilteringValue>().set('all', true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: FilteringPredicate, value: FilteringValue) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== 'startDate') this.predicate.delete(key);\n      });\n    };\n    switch (predicate) {\n      case 'all':\n        resetPredicate();\n        this.predicate.set('all', true);\n        break;\n      case 'isGoing':\n        resetPredicate();\n        this.predicate.set('isGoing', true);\n        break;\n      case 'isHost':\n        resetPredicate();\n        this.predicate.set('isHost', true);\n        break;\n      case 'startDate':\n        this.predicate.delete('startDate');\n        this.predicate.set('startDate', value);\n        break;\n    }\n  };\n\n  get axiosParams(): URLSearchParams {\n    const params = new URLSearchParams();\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\n    params.append('pageSize', this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, `${value}`);\n      }\n    });\n    return params;\n  }\n\n  get activitiesByDate(): Activity[] {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a: Activity, b: Activity) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities(): [string, Activity[]][] {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, 'dd MMM yyyy');\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async (): Promise<void> => {\n    this.isLoadingInitial = true;\n    try {\n      const activitiesFromServer = await agent.Activities.list(\n        this.axiosParams\n      );\n\n      activitiesFromServer.data.forEach((activity: Activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(activitiesFromServer.pagination);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setIsLoadingInitial(false);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string): Promise<Activity | undefined> => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n    } else {\n      try {\n        this.isLoadingInitial = true;\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n      } catch (error) {\n        console.log(error);\n      } finally {\n        this.setIsLoadingInitial(false);\n      }\n    }\n\n    return this.selectedActivity;\n  };\n\n  setIsLoadingInitial = (state: boolean): void => {\n    this.isLoadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues): Promise<void> => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues): Promise<void> => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteActivity = async (id: string): Promise<void> => {\n    this.isLoading = true;\n\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.isLoading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.isLoading = true;\n\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\n            (a) => a.username !== user?.username\n          );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity!.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.isLoading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.isLoading = true;\n\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity\n          ?.isCancelled;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.isLoading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          if (attendee.following) {\n            attendee.followersCount--;\n          } else {\n            attendee.followersCount++;\n          }\n        }\n      });\n    });\n  };\n\n  private getActivity = (id: string): Activity | undefined => {\n    return this.activityRegistry.get(id);\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.username === user.username\n      );\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(\n        (x) => x.username === activity.hostUsername\n      );\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n}\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\nimport agent from '../api/agent';\nimport { FilteringPredicate } from '../common/options/filteringOptions';\nimport { FollowingPredicate } from '../common/options/followingTypes';\nimport { Photo, Profile, UserActivity } from '../models/profile';\nimport { store } from './store';\n\nexport default class ProfileStore {\n  currentUserProfile: Profile | null = null;\n  profile: Profile | null = null;\n  isLoadingProfile: boolean = false;\n  isUploading: boolean = false;\n  followings: Profile[] = [];\n  isLoadingFollowings: boolean = false;\n  isLoading: boolean = false;\n  activeTab: number = 0;\n  userActivities: UserActivity[] = [];\n  isLoadingActivities: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3) {\n          this.loadFollowings('followers');\n        } else if (activeTab === 4) {\n          this.loadFollowings('following');\n        } else {\n          this.followings = [];\n        }\n      }\n    );\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  };\n\n  get isCurrentUser(): boolean {\n    return store.userStore.user?.username === this.profile?.username;\n  }\n\n  loadProfile = async (username: string) => {\n    this.isLoadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.isLoadingProfile = false));\n    }\n  };\n\n  uploadPhoto = async (file: Blob) => {\n    this.isUploading = true;\n\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.isUploading = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.isLoading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.isLoading = false;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.isLoading = false));\n    }\n  };\n\n  deletePhoto = async (photo: Photo) => {\n    this.isLoading = true;\n\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(\n            (p) => p.id !== photo.id\n          );\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.isLoading = false));\n    }\n  };\n\n  updateProfile = async (profile: Partial<Profile>) => {\n    this.isLoading = true;\n\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (\n          profile.displayName &&\n          profile.displayName !== store.userStore.user?.displayName\n        ) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = { ...this.profile, ...(profile as Profile) };\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.isLoading = false;\n      });\n    }\n  };\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.isLoading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.username &&\n          this.profile.username === username\n        ) {\n          if (following) {\n            this.profile.followersCount++;\n          } else {\n            this.profile.followersCount--;\n          }\n          this.profile.following = !this.profile.following;\n        }\n\n        if (\n          this.profile &&\n          this.profile.username === store.userStore.user?.username\n        ) {\n          if (following) {\n            this.profile.followersCount++;\n          } else {\n            this.profile.followersCount--;\n          }\n        }\n\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            if (profile.following) {\n              profile.followersCount--;\n            } else {\n              profile.followersCount++;\n            }\n            profile.following = !profile.following;\n          }\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.isLoading = false));\n    }\n  };\n\n  loadFollowings = async (predicate: FollowingPredicate) => {\n    this.isLoadingFollowings = true;\n\n    try {\n      const followings = await agent.Profiles.listFollowings(\n        this.profile!.username,\n        predicate\n      );\n\n      runInAction(() => {\n        this.followings = followings;\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.isLoadingFollowings = false;\n      });\n    }\n  };\n\n  loadUserActivities = async (\n    username: string,\n    predicate?: FilteringPredicate\n  ) => {\n    this.isLoadingActivities = true;\n\n    try {\n      const activities = await agent.Profiles.listActivities(\n        username,\n        predicate!\n      );\n      runInAction(() => {\n        this.userActivities = activities;\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.isLoadingActivities = false));\n    }\n  };\n}\n","import { makeAutoObservable, runInAction } from 'mobx';\nimport { history } from '../..';\nimport agent from '../api/agent';\nimport { User, UserFormValues } from '../models/user';\nimport { store } from './store';\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn(): boolean {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    localStorage.removeItem('jwt');\n    this.user = null;\n    history.push('/');\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  setImage = (image: string) => {\n    if (this.user) {\n      this.user.image = image;\n    }\n  };\n\n  setDisplayName = (name: string) => {\n    if(this.user){\n      this.user.displayName = name;\n    }\n  }\n}\n","import { createContext, useContext } from 'react';\nimport ActivityStore from './activityStore';\nimport CommentStore from './commentStore';\nimport CommonStore from './commonStore';\nimport ModalStore from './modalStore';\nimport ProfileStore from './profileStore';\nimport UserStore from './userStore';\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from 'mobx';\nimport { ServerError } from '../models/serverError';\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = localStorage.getItem('jwt');\n  appLoaded: boolean = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          localStorage.setItem('jwt', token);\n        } else {\n          localStorage.removeItem('jwt');\n        }\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    if (token) {\n      localStorage.setItem('jwt', token);\n    }\n    this.token = token;\n  };\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from 'mobx';\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element): void => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n\n  closeModal = (): void => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}\n","import {\n  HubConnection,\n  HubConnectionBuilder,\n  LogLevel,\n} from '@microsoft/signalr';\nimport { makeAutoObservable, runInAction } from 'mobx';\nimport { ChatComment } from '../models/comment';\nimport { store } from './store';\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(\n          `${process.env.REACT_APP_BASE_URL_CHAT}?activityId=${activityId}`,\n          {\n            accessTokenFactory: () => store.userStore.user?.token!,\n          }\n        )\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection\n        .start()\n        .catch((error) =>\n          console.log('Error establishing the connection: ', error)\n        );\n\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach((comment) => {\n            comment.createdAt = new Date(comment.createdAt + 'Z');\n          });\n          this.comments = comments;\n        });\n      });\n\n      this.hubConnection.on('ReceiveComments', (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection\n      ?.stop()\n      .catch((error) => console.log('Error stopping connection: ', error));\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n\n    try {\n      await this.hubConnection?.invoke('SendComment', values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\nimport {\n  ACTIVITIES_PAGE_ROUTE,\n  CREATE_ACTIVITY_PAGE_ROUTE,\n  ERRORS_PAGE_ROUTE,\n  getProfileRoute,\n  HOME_PAGE_ROUTE,\n} from '../constants/routes';\nimport { useStore } from '../stores/store';\n\nexport default observer(function NavBar() {\n  const {\n    userStore: { logout, user },\n  } = useStore();\n  return (\n    <Menu inverted fixed='top'>\n      <Container>\n        <Menu.Item header as={NavLink} exact to={HOME_PAGE_ROUTE}>\n          <img src='/assets/logo.png' alt='logo' style={{ marginRight: 10 }} />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item name='Activities' as={NavLink} to={ACTIVITIES_PAGE_ROUTE} />\n        {process.env.NODE_ENV === 'development' && (\n          <Menu.Item name='Errors' as={NavLink} to={ERRORS_PAGE_ROUTE} />\n        )}\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to={CREATE_ACTIVITY_PAGE_ROUTE}\n            positive\n            content='Create Activity'\n          />\n        </Menu.Item>\n        <Menu.Item position='right'>\n          <Image\n            src={user?.image || '/assets/user.png'}\n            avatar\n            spaced='right'\n          />\n          <Dropdown pointing='top left' text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={getProfileRoute(user?.username)}\n                text='My Profile'\n                icon='user'\n              />\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Header, Menu } from 'semantic-ui-react';\nimport Calendar from 'react-calendar';\nimport { useStore } from '../../../app/stores/store';\n\nexport default observer(function ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n\n  return (\n    <>\n      <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\n        <Header icon='filter' attached color='teal' content='Filters' />\n        <Menu.Item\n          content='All Activities'\n          active={predicate.has('all')}\n          onClick={() => setPredicate('all', true)}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', true)}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', true)}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date) => setPredicate('startDate', date as Date)}\n        value={(predicate.get('startDate') as Date) || new Date()}\n      />\n    </>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent } from 'react';\nimport { Button, Reveal } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface FollowButtonProps {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: FollowButtonProps) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, isLoading } = profileStore;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    if (profile.following) {\n      updateFollowing(username, false);\n    } else {\n      updateFollowing(username, true);\n    }\n  }\n\n  return userStore.user?.username === profile.username ? null : (\n    <Reveal animated='move'>\n      <Reveal.Content visible style={{ width: '100%' }}>\n        <Button\n          fluid\n          color='teal'\n          content={profile.following ? 'Following' : 'Not following'}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: '100%' }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? 'red' : 'green'}\n          content={profile.following ? 'Unfollow' : 'Follow'}\n          loading={isLoading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { getProfileRoute } from '../../app/constants/routes';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface ProfileCardProps {\n  profile: Profile;\n}\n\nfunction truncate(str: string | undefined): string | undefined {\n  if (str) {\n    return str.length > 40 ? str.substring(0, 37) + '...' : str;\n  }\n}\n\nexport default function ProfileCard({ profile }: ProfileCardProps) {\n  return (\n    <Card as={Link} to={getProfileRoute(profile.username)}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='user' />\n        {profile.followersCount}{' '}\n        {profile.followersCount !== 1 ? 'Followers' : 'Follower'}\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Image, Popup } from 'semantic-ui-react';\nimport { getProfileRoute } from '../../../app/constants/routes';\nimport { Profile } from '../../../app/models/profile';\nimport ProfileCard from '../../profiles/ProfileCard';\n\ninterface ActivityListItemAttendeeProps {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({\n  attendees,\n}: ActivityListItemAttendeeProps): JSX.Element {\n  const styles = {\n    borderColor: 'orange',\n    borderWidth: 3,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={getProfileRoute(attendee.username)}\n            >\n              <Image\n                size='mini'\n                circular\n                src={attendee.image || '/assets/user.png'}\n                alt={attendee.username}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n","import React from 'react';\nimport { Item, Button, Segment, Icon, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport {\n  getActivityDetailsRoute,\n  getProfileRoute,\n} from '../../../app/constants/routes';\nimport { Activity } from '../../../app/models/activity';\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\n\ninterface ActivityListItemProps {\n  activity: Activity;\n}\n\nexport default function ActivityListItem({\n  activity,\n}: ActivityListItemProps): JSX.Element {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label\n            attached='top'\n            color='red'\n            content='Cancelled'\n            style={{ textAlign: 'center' }}\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size='tiny'\n              circular\n              src={activity.host?.image || '/assets/user.png'}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={getActivityDetailsRoute(activity.id)}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{' '}\n                <Link to={getProfileRoute(activity.host?.username)}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color='orange'>\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color='green'>\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n          <Icon name='marker' /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={getActivityDetailsRoute(activity.id)}\n          color='teal'\n          floated='right'\n          content='View'\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Header } from 'semantic-ui-react';\nimport { Activity } from '../../../app/models/activity';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer(function ActivityList() {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color='teal'>\n            {group}\n          </Header>\n          {activities.map((activity: Activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n});\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color='blue' floated='right' content='View' />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport { PagingParams } from '../../../app/models/pagination';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityFilters from './ActivityFilters';\nimport ActivityList from './ActivityList';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const {\n    loadActivities,\n    activityRegistry,\n    setPagingParams,\n    pagination,\n  } = activityStore;\n  const [isLoadingNext, setIsLoadingNext] = useState<boolean>(false);\n\n  function handleGetNext() {\n    setIsLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().finally(() => setIsLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) {\n      loadActivities();\n    }\n  }, [activityRegistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width='10'>\n        {activityStore.isLoadingInitial && !isLoadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={\n              !isLoadingNext &&\n              !!pagination &&\n              pagination?.currentPage < pagination.totalPages\n            }\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width='6'>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width='10'>\n        <Loader active={isLoadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React from 'react';\nimport { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface CustomTextInputProps {\n  placeholder: string;\n  name: string;\n  label?: string;\n  type?: 'text' | 'password';\n}\n\nexport default function CustomTextInput(props: CustomTextInputProps) {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import React from 'react';\nimport { ErrorMessage, Form, Formik } from 'formik';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport * as Yup from 'yup';\nimport CustomTextInput from '../../app/common/form/CustomTextInput';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function LoginForm(): JSX.Element {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: '', password: '', error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.login(values).catch((error) =>\n          setErrors({\n            error: 'Invalid email or password',\n          })\n        )\n      }\n      validationSchema={Yup.object({\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n          <Header\n            as='h2'\n            content='Login to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <CustomTextInput name='email' placeholder='Email' />\n          <CustomTextInput\n            name='password'\n            placeholder='Password'\n            type='password'\n          />\n          <ErrorMessage\n            name='error'\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color='red'\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            disabled={!isValid || !dirty || isSubmitting}\n            positive\n            content='Login'\n            type='submit'\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface ValidationErrorsProps {\n  errors: any;\n}\n\nexport default function ValidationErrors({ errors }: ValidationErrorsProps) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n","import React from 'react';\nimport { ErrorMessage, Form, Formik } from 'formik';\nimport { Button, Header } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport * as Yup from 'yup';\nimport CustomTextInput from '../../app/common/form/CustomTextInput';\nimport { useStore } from '../../app/stores/store';\nimport ValidationErrors from '../errors/ValidationErrors';\n\nexport default observer(function RegisterForm(): JSX.Element {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: '',\n        username: '',\n        email: '',\n        password: '',\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) =>\n          setErrors({\n            error,\n          })\n        )\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n          <Header\n            as='h2'\n            content='Sign up to Reactivities'\n            color='teal'\n            textAlign='center'\n          />\n          <CustomTextInput name='displayName' placeholder='Display Name' />\n          <CustomTextInput name='username' placeholder='Username' />\n          <CustomTextInput name='email' placeholder='Email' />\n          <CustomTextInput\n            name='password'\n            placeholder='Password'\n            type='password'\n          />\n          <ErrorMessage\n            name='error'\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            loading={isSubmitting}\n            disabled={!isValid || !dirty || isSubmitting}\n            positive\n            content='Register'\n            type='submit'\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\nimport { ACTIVITIES_PAGE_ROUTE } from '../../app/constants/routes';\nimport { useStore } from '../../app/stores/store';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nexport default observer(function HomePage(): JSX.Element {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign='center' vertical className='masthead'>\n      <Container text>\n        <Header as='h1' inverted>\n          <Image\n            size='massive'\n            src='/assets/logo.png'\n            alt='logo'\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as='h2' inverted content='Welcome to Reactivities' />\n            <Button as={Link} to={ACTIVITIES_PAGE_ROUTE} size='huge' inverted>\n              Go to Activities!\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size='huge'\n              inverted\n            >\n              Login!\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm />)}\n              size='huge'\n              inverted\n            >\n              Register!\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n});\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface LoadingComponentProps {\n  inverted?: boolean;\n  content: string;\n}\n\nexport default function LoadingComponent({\n  inverted = true,\n  content = 'Loading...',\n}: LoadingComponentProps) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n}\n","import React from 'react';\nimport { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface CustomTextAreaProps {\n  placeholder: string;\n  name: string;\n  label?: string;\n  rows: number;\n}\n\nexport default function CustomAreaInput(props: CustomTextAreaProps) {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import React from 'react';\nimport { useField } from 'formik';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\nexport type SelectInputOptions = { text: string; value: string }[];\n\ninterface CustomSelectInputProps {\n  placeholder: string;\n  name: string;\n  options: SelectInputOptions;\n  label?: string;\n}\n\nexport default function CustomSelectInput(props: CustomSelectInputProps) {\n  const [field, meta, helpers] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { SelectInputOptions } from '../form/CustomSelectInput';\n\nexport const categoryOptions: SelectInputOptions = [\n  { text: 'Drinks', value: 'drinks' },\n  { text: 'Culture', value: 'culture' },\n  { text: 'Film', value: 'film' },\n  { text: 'Food', value: 'food' },\n  { text: 'Music', value: 'music' },\n  { text: 'Travel', value: 'travel' },\n];\n","import React from 'react';\nimport { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\n\ninterface CustomDateInputProps extends Partial<ReactDatePickerProps> {\n  name: string;\n}\n\nexport default function CustomDateInput(props: CustomDateInputProps) {\n  const [field, meta, helpers] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color='red'>\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { Activity, ActivityFormValues } from '../../../app/models/activity';\nimport { useStore } from '../../../app/stores/store';\nimport { v4 as uuid } from 'uuid';\nimport {\n  ACTIVITIES_PAGE_ROUTE,\n  getActivityDetailsRoute,\n} from '../../../app/constants/routes';\nimport CustomTextInput from '../../../app/common/form/CustomTextInput';\nimport CustomTextArea from '../../../app/common/form/CustomTextArea';\nimport CustomSelectInput from '../../../app/common/form/CustomSelectInput';\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\nimport CustomDateInput from '../../../app/common/form/CustomDateInput';\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const {\n    createActivity,\n    updateActivity,\n    isLoading,\n    loadActivity,\n    isLoadingInitial,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(\n    new ActivityFormValues()\n  );\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required('Title is required'),\n    description: Yup.string().required('Description is required'),\n    category: Yup.string().required('Category is required'),\n    date: Yup.string().required('Date is required'),\n    city: Yup.string().required('City is required'),\n    venue: Yup.string().required('Venue is required'),\n  });\n\n  useEffect(() => {\n    if (id) {\n      loadActivity(id).then((activity: Activity | undefined) => {\n        setActivity(new ActivityFormValues(activity));\n      });\n    }\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (activity.id) {\n      updateActivity(activity).then(() => {\n        history.push(getActivityDetailsRoute(activity.id!));\n      });\n    } else {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() => {\n        history.push(getActivityDetailsRoute(newActivity.id));\n      });\n    }\n  }\n\n  return id && isLoadingInitial ? (\n    <LoadingComponent content='Loading activity' />\n  ) : (\n    <Segment clearing>\n      <Header content='Activity Details' sub color='teal' />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={handleFormSubmit}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n            <CustomTextInput placeholder='Title' name='title' />\n            <CustomTextArea\n              rows={3}\n              placeholder='Description'\n              name='description'\n            />\n            <CustomSelectInput\n              options={categoryOptions}\n              placeholder='Category'\n              name='category'\n            />\n            <CustomDateInput\n              placeholderText='Date'\n              name='date'\n              showTimeSelect\n              timeCaption='time'\n              dateFormat='MMMM d, yyyy h:mm aa'\n            />\n            <Header content='Location Details' sub color='teal' />\n            <CustomTextInput placeholder='City' name='city' />\n            <CustomTextInput placeholder='Venue' name='venue' />\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isLoading}\n              floated='right'\n              positive\n              type='submit'\n              content='Submit'\n            />\n            <Button\n              as={Link}\n              to={ACTIVITIES_PAGE_ROUTE}\n              floated='right'\n              type='button'\n              content='Cancel'\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});\n","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Formik, Form, Field, FieldProps } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\nimport * as Yup from 'yup';\nimport { getProfileRoute } from '../../../app/constants/routes';\nimport { useStore } from '../../../app/stores/store';\nimport { formatDistanceToNow } from 'date-fns';\n\ninterface ActivityDetailedChatProps {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({\n  activityId,\n}: ActivityDetailedChatProps) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [activityId, commentStore]);\n\n  return (\n    <>\n      <Segment\n        textAlign='center'\n        attached='top'\n        inverted\n        color='teal'\n        style={{ border: 'none' }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: '' }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className='ui form'>\n              <Field name='body'>\n                {(props: FieldProps) => (\n                  <div style={{ position: 'relative' }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder='Enter your comment (Enter to submit, SHIFT + enter fo new line)'\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter' && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === 'Enter' && !e.shiftKey) {\n                          e.preventDefault();\n                          if (isValid) {\n                            handleSubmit();\n                          }\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || '/assets/user.png'} />\n              <Comment.Content>\n                <Comment.Author\n                  as={Link}\n                  to={getProfileRoute(comment.username)}\n                >\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nimport { getManageActivityRoute, getProfileRoute } from '../../../app/constants/routes';\nimport { Activity } from '../../../app/models/activity';\nimport { useStore } from '../../../app/stores/store';\n\nconst activityImageStyle = {\n  filter: 'brightness(30%)',\n};\n\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white',\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, isLoading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached='top' style={{ padding: '0' }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color='red'\n            content='Cancelled'\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size='huge'\n                  content={activity.title}\n                  style={{ color: 'white' }}\n                />\n                <p>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</p>\n                <p>\n                  Hosted by{' '}\n                  <strong>\n                    <Link to={getProfileRoute(activity.host?.username)}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached='bottom'>\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? 'green' : 'red'}\n              floated='left'\n              basic\n              content={\n                activity.isCancelled\n                  ? 'Re-activate Activity'\n                  : 'Cancel Activity'\n              }\n              onClick={cancelActivityToggle}\n              loading={isLoading}\n            />\n            <Button\n              disabled={activity.isCancelled}\n              as={Link}\n              to={getManageActivityRoute(activity.id)}\n              color='orange'\n              floated='right'\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={isLoading} onClick={updateAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button\n            disabled={activity.isCancelled}\n            loading={isLoading}\n            onClick={updateAttendance}\n            color='teal'\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nimport { Activity } from '../../../app/models/activity';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached='top'>\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size='large' color='teal' name='info' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='calendar' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign='middle'>\n          <Grid.Column width={1}>\n            <Icon name='marker' size='large' color='teal' />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import React from 'react';\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Activity } from '../../../app/models/activity';\nimport { getProfileRoute } from '../../../app/constants/routes';\n\ninterface ActivityDetailedSidebarProps {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({\n  activity: { attendees, host },\n}: ActivityDetailedSidebarProps) {\n  return !attendees ? null : (\n    <>\n      <Segment\n        textAlign='center'\n        style={{ border: 'none' }}\n        attached='top'\n        secondary\n        inverted\n        color='teal'\n      >\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: 'relative' }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label\n                  style={{ position: 'absolute' }}\n                  color='orange'\n                  ribbon='right'\n                >\n                  Host\n                </Label>\n              )}\n              <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Item.Header as='h3'>\n                  <Link to={getProfileRoute(attendee.username)}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity,\n    loadActivity,\n    isLoadingInitial,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) {\n      loadActivity(id);\n    }\n\n    return () => {\n      clearSelectedActivity();\n    };\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  return isLoadingInitial || !selectedActivity ? (\n    <LoadingComponent content='Loading activity' />\n  ) : (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={selectedActivity} />\n        <ActivityDetailedInfo activity={selectedActivity} />\n        <ActivityDetailedChat activityId={selectedActivity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={selectedActivity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\nimport { ACTIVITIES_PAGE_ROUTE } from '../../app/constants/routes';\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name='search' />\n        Oops - we've looked everywhere and could not find this.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to={ACTIVITIES_PAGE_ROUTE} primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n  return (\n    <Container>\n      <Header as='h1' content='Server Error' />\n      <Header sub as='h5' color='red' content={commonStore.error?.message} />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as='h4' content='Stack trace' color='teal' />\n          <code style={{ marginTop: '10px' }}>{commonStore.error.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      size='mini'\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n});\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Button } from 'semantic-ui-react';\nimport * as Yup from 'yup';\nimport { useStore } from '../../app/stores/store';\nimport { Form, Formik } from 'formik';\nimport CustomTextInput from '../../app/common/form/CustomTextInput';\nimport CustomTextArea from '../../app/common/form/CustomTextArea';\n\ninterface ProfileEditFormProps {\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport default observer(function ProfileEditFormProps({\n  setEditMode,\n}: ProfileEditFormProps) {\n  const {\n    profileStore: { profile, updateProfile },\n  } = useStore();\n\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n      })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className='ui form'>\n          <CustomTextInput placeholder='Display Name' name='displayName' />\n          <CustomTextArea rows={3} placeholder='Add your bio' name='bio' />\n          <Button\n            positive\n            type='submit'\n            loading={isSubmitting}\n            content='Update profile'\n            floated='right'\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React, { useState } from 'react';\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileEditForm from './ProfileEditForm';\n\nexport default observer(function ProfileAbout() {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState<boolean>(false);\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header\n            floated='left'\n            icon='user'\n            content={`About ${profile?.displayName}`}\n          />\n          {isCurrentUser && (\n            <Button\n              floated='right'\n              basic\n              content={editMode ? 'Cancel' : 'Edit Profile'}\n              onClick={() => setEditMode((prevState) => !prevState)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width='16'>\n          {editMode ? (\n            <ProfileEditForm setEditMode={setEditMode} />\n          ) : (\n            <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React, { SyntheticEvent, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { Card, Grid, Header, Tab, TabProps, Image } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nimport { useStore } from '../../app/stores/store';\nimport { UserActivity } from '../../app/models/profile';\nimport { getActivityDetailsRoute } from '../../app/constants/routes';\nimport { FilteringPredicate } from '../../app/common/options/filteringOptions';\n\nconst panes = [\n  { menuItem: 'Future Events', pane: { key: 'future' } },\n  { menuItem: 'Past Events', pane: { key: 'past' } },\n  { menuItem: 'Hosting', pane: { key: 'hosting' } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const {\n    loadUserActivities,\n    profile,\n    isLoadingActivities,\n    userActivities,\n  } = profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key as FilteringPredicate\n    );\n  };\n\n  return (\n    <Tab.Pane loading={isLoadingActivities}>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header floated='left' icon='calendar' content='Activities' />\n        </Grid.Column>\n        <Grid.Column width='16'>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={getActivityDetailsRoute(activity.id)}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: 'cover' }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\n                  <Card.Meta textAlign='center'>\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileCard from './ProfileCard';\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, isLoadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={isLoadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated='left'\n            icon='user'\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React from 'react';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface PhotoWidgetCropperProps {\n  setCropper: React.Dispatch<React.SetStateAction<Cropper | undefined>>;\n  imagePreview: string;\n}\n\nexport default function PhotoWidgetCropper({\n  setCropper,\n  imagePreview,\n}: PhotoWidgetCropperProps) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: '100%' }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview='.img-preview'\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n}\n","import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Header, Icon } from 'semantic-ui-react';\nimport { FileWithPreview } from '../../models/profile';\n\ninterface PhotoWidgetDropzoneProps {\n  setFiles: React.Dispatch<React.SetStateAction<FileWithPreview[]>>;\n}\n\nexport default function PhotoWidgetDropzone({\n  setFiles,\n}: PhotoWidgetDropzoneProps) {\n  const dzStyles = {\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRadius: '5px',\n    paddingTop: '30px',\n    textAlign: 'center' as 'center',\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: 'green',\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles: File[]) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport { FileWithPreview } from '../../models/profile';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\n\ninterface PhotoUploadWidgetProps {\n  uploadPhoto: (file: Blob) => void;\n  loading: boolean;\n}\n\nexport default function PhotoUploadWidget({\n  uploadPhoto,\n  loading,\n}: PhotoUploadWidgetProps) {\n  const [files, setFiles] = useState<FileWithPreview[]>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: FileWithPreview) =>\n        URL.revokeObjectURL(file.preview)\n      );\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color='teal' content='Step 1 - Add Photo' />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color='teal' content='Step 2 - Resize image' />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color='teal' content='Step 3 - Preview & upload' />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className='img-preview'\n              style={{ minHeight: 200, overflow: 'hidden' }}\n            />\n            <Button.Group widths={2}>\n              <Button\n                loading={loading}\n                onClick={onCrop}\n                positive\n                icon='check'\n              />\n              <Button\n                disabled={loading}\n                onClick={() => setFiles([])}\n                icon='close'\n              />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface ProfilePhotosProps {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({\n  profile,\n}: ProfilePhotosProps) {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      isUploading,\n      isLoading,\n      setMainPhoto,\n      deletePhoto,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState<boolean>(false);\n  const [target, setTarget] = useState<string>('');\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => {\n      setAddPhotoMode(false);\n    });\n  }\n\n  function handleSetMainPhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ): void {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ): void {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header icon='image' content='Photos' />\n          {isCurrentUser && (\n            <Button\n              floated='right'\n              basic\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n              onClick={() => setAddPhotoMode((prevState) => !prevState)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              uploadPhoto={handlePhotoUpload}\n              loading={isUploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color='green'\n                        content='Main'\n                        name={'main' + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === 'main' + photo.id && isLoading}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                        loading={target === photo.id && isLoading}\n                        disabled={photo.isMain}\n                        name={photo.id}\n                        basic\n                        color='red'\n                        icon='trash'\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileActivities from './ProfileActivities';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface ProfileContentProps {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({\n  profile,\n}: ProfileContentProps) {\n  const { profileStore } = useStore();\n\n  const panes = [\n    { menuItem: 'About', render: () => <ProfileAbout /> },\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: 'Events', render: () => <ProfileActivities /> },\n    {\n      menuItem: 'Followers',\n      render: () => <ProfileFollowings />,\n    },\n    {\n      menuItem: 'Following',\n      render: () => <ProfileFollowings />,\n    },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition='right'\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Segment,\n  Statistic,\n} from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface ProfileHeaderProps {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({\n  profile,\n}: ProfileHeaderProps) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size='small'\n                src={profile.image || '/assets/user.png'}\n              />\n              <Item.Content verticalAlign='middle'>\n                <Header as='h1' content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label='Followers' value={profile.followersCount} />\n            <Statistic label='Following' value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Grid } from 'semantic-ui-react';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\nimport { useParams } from 'react-router-dom';\nimport { useStore } from '../../app/stores/store';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { isLoadingProfile, loadProfile, profile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n\n    return () => {\n      setActiveTab(0);\n    };\n  }, [loadProfile, username, setActiveTab]);\n\n  return isLoadingProfile ? (\n    <LoadingComponent content='Loading profile...' />\n  ) : (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import {\n  Redirect,\n  Route,\n  RouteComponentProps,\n  RouteProps,\n} from 'react-router-dom';\nimport { HOME_PAGE_ROUTE } from '../constants/routes';\nimport { useStore } from '../stores/store';\n\ninterface PrivateRouteProps extends RouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({\n  component: Component,\n  ...rest\n}: PrivateRouteProps) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={HOME_PAGE_ROUTE} />\n        )\n      }\n    />\n  );\n}\n","import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Container } from 'semantic-ui-react';\nimport { ToastContainer } from 'react-toastify';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/homes/HomePage';\nimport {\n  ACTIVITIES_PAGE_ROUTE,\n  ACTIVITIES_DETAILS_PAGE_ROUTE,\n  CREATE_ACTIVITY_PAGE_ROUTE,\n  HOME_PAGE_ROUTE,\n  MANAGE_ACTIVITY_PAGE_ROUTE,\n  ERRORS_PAGE_ROUTE,\n  SERVER_ERROR_PAGE_ROUTE,\n  PROFILE_PAGE_ROUTE,\n} from '../constants/routes';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport NotFoundPage from '../../features/errors/NotFoundPage';\nimport ServerErrorPage from '../../features/errors/ServerErrorPage';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nexport default observer(function App(): JSX.Element {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  return !commonStore.appLoaded ? (\n    <LoadingComponent content='Loading app' />\n  ) : (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path={HOME_PAGE_ROUTE} component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path={ACTIVITIES_PAGE_ROUTE}\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path={ACTIVITIES_DETAILS_PAGE_ROUTE}\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\n                    CREATE_ACTIVITY_PAGE_ROUTE,\n                    MANAGE_ACTIVITY_PAGE_ROUTE,\n                  ]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path={PROFILE_PAGE_ROUTE}\n                  component={ProfilePage}\n                />\n                {process.env.NODE_ENV === 'development' && (\n                  <Route path={ERRORS_PAGE_ROUTE} component={TestErrors} />\n                )}\n                <Route\n                  path={SERVER_ERROR_PAGE_ROUTE}\n                  component={ServerErrorPage}\n                />\n                <Route component={NotFoundPage} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n});\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/layout/App';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}